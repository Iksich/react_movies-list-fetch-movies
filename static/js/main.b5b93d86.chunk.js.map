{"version":3,"sources":["utils/defaultMovieProps.ts","components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","services/movieService.ts","utils/textInputDefaults.ts","components/TextInput.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["defaultMovieProps","title","description","imgUrl","imdbUrl","imdbId","MovieCard","movie","className","src","alt","href","defaultProps","MoviesList","movies","map","normalizeNewMovie","response","Title","Plot","Poster","imdbID","textInputDefaults","placeholder","error","errorMessage","TextInput","label","id","value","onChange","htmlFor","type","cn","FindMovie","onAdd","useState","query","isLoading","state","setState","handleSubmit","event","a","preventDefault","prevState","fetch","then","res","json","catch","Response","Error","onSubmit","target","disabled","trim","onClick","App","setMovies","addMovie","useCallback","newMovie","some","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b5b93d86.chunk.js","sourcesContent":["export const defaultMovieProps = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n","import React from 'react';\nimport './MovieCard.scss';\nimport { Movie } from '../../types/Movie';\nimport { defaultMovieProps } from '../../utils/defaultMovieProps';\n\ntype Props = {\n  movie?: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie = defaultMovieProps }) => {\n  const {\n    title, description, imgUrl, imdbUrl,\n  } = movie;\n\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          {imgUrl && (\n            <img\n              data-cy=\"moviePoster\"\n              src={imgUrl}\n              alt=\"Film logo\"\n            />\n          )}\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            {title && (\n              <p className=\"title is-8\" data-cy=\"movieTitle\">\n                {title}\n              </p>\n            )}\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {description}\n          <br />\n          {imdbUrl && (\n            <a href={imdbUrl} data-cy=\"movieURL\">\n              IMDB\n            </a>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMovieCard.defaultProps = {\n  movie: defaultMovieProps,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from '../types/MovieData';\n\nexport const normalizeNewMovie = (response: MovieData) => {\n  const {\n    Title,\n    Plot,\n    Poster,\n    imdbID,\n  } = response;\n\n  return {\n    title: Title,\n    description: Plot,\n    imgUrl: Poster === 'N/A'\n      ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n      : Poster,\n    imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n    imdbId: imdbID,\n  };\n};\n","export const textInputDefaults = {\n  placeholder: '',\n  className: '',\n  error: false,\n  errorMessage: '',\n};\n","import { ChangeEvent, FC } from 'react';\nimport cn from 'classnames';\nimport { textInputDefaults } from '../utils/textInputDefaults';\n\ninterface Props {\n  label: string;\n  id: string;\n  value: string;\n  placeholder?: string;\n  className?: string;\n  error?: boolean;\n  errorMessage?: string;\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport const TextInput: FC<Props> = ({\n  label,\n  id,\n  value,\n  placeholder = textInputDefaults.placeholder,\n  className = textInputDefaults.className,\n  error = textInputDefaults.error,\n  errorMessage = textInputDefaults.errorMessage,\n  onChange,\n}) => (\n  <div className=\"field\">\n    <label className=\"label\" htmlFor={id}>\n      {label}\n    </label>\n    <div className=\"control\">\n      <input\n        data-cy=\"titleField\"\n        type=\"text\"\n        value={value}\n        id={id}\n        placeholder={placeholder}\n        className={cn('input', className, { 'is-danger': error })}\n        onChange={onChange}\n      />\n    </div>\n    {error && (\n      <p className=\"help is-danger\" data-cy=\"errorMessage\">\n        {errorMessage}\n      </p>\n    )}\n  </div>\n);\n\nTextInput.defaultProps = textInputDefaults;\n","import {\n  ChangeEvent,\n  FC,\n  FormEvent,\n  useState,\n} from 'react';\nimport cn from 'classnames';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\nimport { normalizeNewMovie } from '../../services/movieService';\nimport { TextInput } from '../TextInput';\n\ninterface Props {\n  onAdd: (movie: Movie) => void;\n}\n\nexport const FindMovie: FC<Props> = ({ onAdd }) => {\n  const [state, setState] = useState({\n    query: '',\n    movie: null as Movie | null,\n    error: false,\n    isLoading: false,\n  });\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setState(prevState => ({ ...prevState, query: value, error: false }));\n  };\n\n  const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setState(prevState => ({ ...prevState, isLoading: true }));\n    try {\n      const response = await getMovie(state.query);\n\n      if ('Error' in response) {\n        setState(prevState => ({ ...prevState, error: true }));\n      } else {\n        const movie = normalizeNewMovie(response);\n\n        setState(prevState => ({ ...prevState, movie }));\n      }\n    } finally {\n      setState(prevState => ({ ...prevState, isLoading: false }));\n    }\n  };\n\n  const handleAddMovie = () => {\n    if (state.movie) {\n      onAdd(state.movie);\n      setState({\n        query: '', movie: null, error: false, isLoading: false,\n      });\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <TextInput\n          data-cy=\"titleField\"\n          label=\"Movie title\"\n          id=\"movie-title\"\n          value={state.query}\n          placeholder=\"Enter a movie title\"\n          onChange={handleChange}\n          error={state.error}\n          errorMessage=\"Could not find a movie with that title\"\n        />\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button is-light', {\n                'is-loading': state.isLoading,\n              })}\n              disabled={!state.query.trim()}\n            >\n              Search\n            </button>\n          </div>\n          {state.movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n      {state.movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n\n          <MovieCard movie={state.movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=7f86bf65';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = useCallback((newMovie: Movie) => {\n    const isAdded = movies.some(movie => movie.imdbId === newMovie.imdbId);\n\n    if (!isAdded) {\n      setMovies(prevMovies => [...prevMovies, newMovie]);\n    }\n  }, [movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}